-- MySQL Script generated by MySQL Workbench
-- Mon Mar 10 16:44:34 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema naikDB
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `naikDB` ;

-- -----------------------------------------------------
-- Schema naikDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `naikDB` DEFAULT CHARACTER SET utf8 ;
USE `naikDB` ;

-- -----------------------------------------------------
-- Table `naikDB`.`roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `naikDB`.`roles` ;

CREATE TABLE IF NOT EXISTS `naikDB`.`roles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;

insert into roles (name, description) values('admin',null);
insert into roles (name, description) values('consumer',null);


-- -----------------------------------------------------
-- Table `naikDB`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `naikDB`.`users` ;

CREATE TABLE IF NOT EXISTS `naikDB`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(50) NOT NULL,
  `email` VARCHAR(50) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  `roles_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  INDEX `fk_users_roles1_idx` (`roles_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_roles1`
    FOREIGN KEY (`roles_id`)
    REFERENCES `naikDB`.`roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `naikDB`.`productTypes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `naikDB`.`productTypes` ;

CREATE TABLE IF NOT EXISTS `naikDB`.`productTypes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(75) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;

use naikDB;
insert into productTypes (name) values('zapatillas C#');
insert into productTypes (name) values('zapatillas JAVA');
insert into productTypes (name) values('zapatillas Javascript');
insert into productTypes (name) values('zapatillas PHP');

-- -----------------------------------------------------
-- Table `naikDB`.`products`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `naikDB`.`products` ;

CREATE TABLE IF NOT EXISTS `naikDB`.`products` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NULL,
  `price` DOUBLE NOT NULL,
  `onSale` TINYINT NULL,
  `discount` INT NOT NULL,
  `imageUrl` VARCHAR(100) NOT NULL,
  `productTypes_id` INT NOT NULL,
  `stock` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  INDEX `fk_products_productTypes_idx` (`productTypes_id` ASC) VISIBLE,
  CONSTRAINT `fk_products_productTypes`
    FOREIGN KEY (`productTypes_id`)
    REFERENCES `naikDB`.`productTypes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `naikDB`.`cart`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `naikDB`.`cart` ;
DROP TABLE IF EXISTS `naikDB`.`carts` ;
CREATE TABLE IF NOT EXISTS `naikDB`.`carts` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `users_id` INT NOT NULL,
  `validUntil` DATETIME NOT NULL DEFAULT CURRENT_timestamp,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_cart_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `naikDB`.`users` (`id`)
    ON DELETE cascade
    ON UPDATE cascade)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `naikDB`.`cart_has_products`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `naikDB`.`cart_has_products` ;

CREATE TABLE IF NOT EXISTS `naikDB`.`cart_has_products` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cart_id` INT NOT NULL,
  `products_id` INT NOT NULL,
  `quantity` INT NOT NULL,
  PRIMARY KEY (`id`), 
  UNIQUE KEY `unique_cart_product` (`cart_id`, `products_id`), -- Asegura unicidad de la combinación
  INDEX `fk_cart_has_products_products1_idx` (`products_id` ASC) VISIBLE,
  INDEX `fk_cart_has_products_cart1_idx` (`cart_id` ASC) VISIBLE,
  CONSTRAINT `fk_cart_has_products_cart1`
    FOREIGN KEY (`cart_id`)
    REFERENCES `naikDB`.`carts` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cart_has_products_products1`
    FOREIGN KEY (`products_id`)
    REFERENCES `naikDB`.`products` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `naikDB`.`historial`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `naikDB`.`historial` ;

CREATE TABLE IF NOT EXISTS `naikDB`.`historial` (
  `users_id` INT NOT NULL,
  `products_id` INT NOT NULL,
  `cart_id` INT NOT NULL,
  `buyedAt` DATETIME NOT NULL,
  PRIMARY KEY (`products_id`, `users_id`),
  INDEX `fk_users_has_products_products1_idx` (`products_id` ASC) VISIBLE,
  INDEX `fk_users_has_products_users1_idx` (`users_id` ASC) VISIBLE,
  INDEX `fk_historial_cart1_idx` (`cart_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_products_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `naikDB`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_products_products1`
    FOREIGN KEY (`products_id`)
    REFERENCES `naikDB`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_historial_cart1`
    FOREIGN KEY (`cart_id`)
    REFERENCES `naikDB`.`cart` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- añado un evento que teoricamente revisa el validUntil de los carritos hasta que el ahora sea superior
CREATE EVENT delete_expired_carts
ON SCHEDULE EVERY 1 MINUTE
DO
DELETE FROM carts WHERE validUntil < UTC_TIMESTAMP();

insert into users (username, email, password, roles_id) values("admin","admin@example.com","1234",1);

commit;
